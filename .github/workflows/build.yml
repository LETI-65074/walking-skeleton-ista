name: Build JAR (Vaadin Prod + Commit JAR)

on:
  push:
    branches: [ main ]
    paths-ignore:
      - "*.jar"                 # evita loop quando o bot commita o JAR
  workflow_dispatch: {}

# Permissão para o GITHUB_TOKEN poder fazer push de commits
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0        # necessário para fazer commit & push

      - name: Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Build Maven (produção)
        run: |
          if [ -f ./mvnw ]; then
            ./mvnw -B -Pproduction -Dmaven.test.skip=true clean package
          else
            mvn -B -Pproduction -Dmaven.test.skip=true clean package
          fi

      - name: Copiar JAR para a raiz do workspace
        shell: bash
        run: |
          shopt -s globstar nullglob
          cp **/target/*.jar .

      - name: Commit do JAR na raiz do repositório (requisito do enunciado)
        if: ${{ github.ref == 'refs/heads/main' }}
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # adiciona apenas JARs na raiz
          git add *.jar || true

          # cria commit só se houver alterações
          if ! git diff --cached --quiet; then
            git commit -m "chore(ci): adiciona JAR gerado à raiz do repositório [skip ci]"
            git push
          else
            echo "Sem alterações para commitar"
          fi

      - name: Publicar artefacto (.jar)
        uses: actions/upload-artifact@v4
        with:
          name: app-jar-${{ github.ref_name }}-${{ github.run_number }}
          path: |
            **/target/*.jar
            ./*.jar
          if-no-files-found: error
          retention-days: 7
